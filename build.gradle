plugins {
    id 'java'
    id "me.champeau.jmh" version "0.6.6"
}

group 'ru.kdev'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.ow2.asm:asm:9.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    jmhImplementation 'org.openjdk.jmh:jmh-core:1.34'
    jmhImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.34'
}

compileJmhJava {
    options.compilerArgs << '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'
}

compileJava {
    options.compilerArgs << '--add-exports=java.base/jdk.internal.loader=ALL-UNNAMED'
    options.compilerArgs << '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'
}

compileTestJava {
    options.compilerArgs << '--add-exports=java.base/jdk.internal.loader=ALL-UNNAMED'
    options.compilerArgs << '--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()

    jvmArgs '-Dfile.encoding=UTF-8'
}